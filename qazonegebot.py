import telebot
from telebot import types
import logging
import time
import flask
import os

API_TOKEN = '1418888936:AAHSr7P3oWrQTtaEL2DDrc2pkIithtZFCJg'

WEBHOOK_HOST = 'https://qazonegebot.herokuapp.com/'
WEBHOOK_PORT = int(os.environ.get('PORT', 5000))  # 443, 80, 88 or 8443 (port need to be 'open')
WEBHOOK_LISTEN = '0.0.0.0'  # In some VPS you may need to put here the IP addr

WEBHOOK_SSL_CERT = './qazonegebot.herokuapp.com.key'  # Path to the ssl certificate
WEBHOOK_SSL_PRIV = './qazonegebot.herokuapp.com.cert'  # Path to the ssl private key


WEBHOOK_URL_BASE = "https://%s:%s" % (WEBHOOK_HOST, WEBHOOK_PORT)
WEBHOOK_URL_PATH = "/%s/" % (API_TOKEN)

logger = telebot.logger
telebot.logger.setLevel(logging.INFO)


app = flask.Flask(__name__)
bot = telebot.TeleBot(API_TOKEN)

# Empty webserver index, return nothing, just http 200
@app.route('/', methods=['GET', 'HEAD'])
def index():
    return ''


# Process webhook calls
@app.route(WEBHOOK_URL_PATH, methods=['POST'])
def webhook():
    if flask.request.headers.get('content-type') == 'application/json':
        json_string = flask.request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return ''
    else:
        flask.abort(403)


user = bot.get_me()

### Language choice
languageMarkup = types.InlineKeyboardMarkup()
kzButton = types.InlineKeyboardButton( '“ö–ó',callback_data ='kz' )
ruButton = types.InlineKeyboardButton( '–†–£',callback_data ='ru' )
languageMarkup.add( kzButton, ruButton)

lngChooseButton = types.InlineKeyboardButton( text = '–¢—ñ–ª–¥—ñ ”©–∑–≥–µ—Ä—Ç—É/–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫', callback_data = 'lang' )

### RU section
startMarkup = types.InlineKeyboardMarkup()
zoomButton = types.InlineKeyboardButton( 'üìπZoom', callback_data = 'zoomru' )
skillcupButton = types.InlineKeyboardButton( 'ü•õSkill Cup', callback_data = 'skillcupru' )
otherButton = types.InlineKeyboardButton( '–î—Ä—É–≥–æ–µ', callback_data = 'otherru' )
startMarkup.add( zoomButton, skillcupButton, otherButton, lngChooseButton )

zoomMarkupru = types.InlineKeyboardMarkup( row_width = 3 )
zoomButton1ru = types.InlineKeyboardButton( text = '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ ZOOM –Ω–∞ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ', url = 'https://youtu.be/avGVFLILcrA')
zoomButton2ru = types.InlineKeyboardButton( text = '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –æ—Å–Ω–æ–≤–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º ZOOM', url = 'https://youtu.be/b8MLT2F0ZSo')
gobackButtonru = types.InlineKeyboardButton( text  = '‚¨ÖÔ∏è', callback_data = 'gobackru')
zoomMarkupru.add( zoomButton1ru, zoomButton2ru, gobackButtonru )

skillcupMarkupru = types.InlineKeyboardMarkup( row_width = 3 )
skillcupButton1ru = types.InlineKeyboardButton(text='–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é Skill Cup', url='https://youtu.be/KUv0ytlDt1U')
skillcupMarkupru.add(skillcupButton1ru,gobackButtonru)

otherMarkupru = types.InlineKeyboardMarkup( row_width = 3 )
otherButtonru = types.InlineKeyboardButton( text = '–§–æ—Ä–º–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è', url = 'tiny.cc/skillcup' )
otherMarkupru.add( otherButtonru, gobackButtonru )

### KZ Setion
startMarkupkz = types.InlineKeyboardMarkup()
zoomButtonkz = types.InlineKeyboardButton('üìπZoom', callback_data = 'zoomkz' )
skillcupButtonkz = types.InlineKeyboardButton( 'ü•õSkill Cup', callback_data = 'skillcupkz' )
otherButtonkz = types.InlineKeyboardButton( '–ë–∞—Å“õ–∞', callback_data = 'otherkz' )
startMarkupkz.add(zoomButtonkz,skillcupButtonkz,otherButtonkz,lngChooseButton)

zoomMarkupkz = types.InlineKeyboardMarkup( row_width = 3)
zoomButton1kz = types.InlineKeyboardButton( text='–û—Ä–Ω–∞—Ç—É –Ω“±—Å“õ–∞—É–ª—ã“õ', url = 'https://youtu.be/DSnxu1s5aV4')
zoomButton2kz = types.InlineKeyboardButton( text='–ü–∞–π–¥–∞–ª–∞–Ω—É –Ω“±—Å“õ–∞—É–ª—ã“õ', url = 'https://youtu.be/LR4qDy9Jpek')
gobackButtonkz = types.InlineKeyboardButton( text = '‚¨ÖÔ∏è', callback_data = 'gobackkz')
zoomMarkupkz.add(zoomButton1kz, zoomButton2kz, gobackButtonkz)

skillcupMarkupkz = types.InlineKeyboardMarkup(row_width = 3)
skillcupButton1kz = types.InlineKeyboardButton(text = 'Skill Cup “õ–æ–ª–¥–∞–Ω–∞—É –Ω“±—Å“õ–∞—É–ª—ã“õ', url='https://youtu.be/J0fs6lYbge4')
skillcupMarkupkz.add(skillcupButton1kz, gobackButtonkz)

otherMarkupkz = types.InlineKeyboardMarkup(row_width =3 )
otherButton1kz = types.InlineKeyboardButton(text = '–ö–µ—Ä—ñ –±–∞–π–ª–∞–Ω—ã—Å –Ω—ã—Å–∞–Ω—ã', url='tiny.cc/skillcup')
otherMarkupkz.add(otherButton1kz, gobackButtonkz)


@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, '–¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑:/–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:',reply_markup = languageMarkup)


@bot.callback_query_handler(func = lambda call:True)
def callback_inline(call):
    if call.message:
        if call.data == 'kz':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="“ö–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑! –°—ñ–∑–≥–µ “õ–∞–Ω–¥–∞–π –∫”©–º–µ–∫ –∫”©—Ä—Å–µ—Ç–µ –∞–ª–∞–º—ã–Ω?", reply_markup = startMarkupkz)
        elif call.data == 'ru':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ß–µ–º —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?", reply_markup = startMarkup)
        elif call.data == 'zoomru':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ ZOOM:", reply_markup = zoomMarkupru)
        elif call.data == 'skillcupru':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ Skill Cup:", reply_markup = skillcupMarkupru)
        elif call.data == 'otherru':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –ø–æ–º–æ—â—å—é –ø–æ –∞–¥—Ä–µ—Å—É: tiny.cc/skillcup", reply_markup = otherMarkupru)
        elif call.data == 'gobackru':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ß–µ–º —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?", reply_markup = startMarkup)
        elif call.data == 'zoomkz':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="ZOOM “Ø—à—ñ–Ω –±–µ–π–Ω–µ –Ω“±—Å“õ–∞—É–ª–∞—Ä:", reply_markup = zoomMarkupkz)
        elif call.data == 'skillcupkz':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="Skill Cup “Ø—à—ñ–Ω –±–µ–π–Ω–µ –Ω“±—Å“õ–∞—É–ª–∞—Ä:", reply_markup = skillcupMarkupkz)
        elif call.data == 'otherkz':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ï–≥–µ—Ä —Å—ñ–∑–¥–µ —Å“±—Ä–∞“õ—Ç–∞—Ä —Ç—É—ã–Ω–¥–∞—Å–∞, tiny.cc/skillcup —Å–∞–π—Ç—ã–Ω–∞–Ω –∫”©–º–µ–∫ —Å“±—Ä–∞–π –∞–ª–∞—Å—ã–∑:", reply_markup = otherMarkupkz)
        elif call.data == 'gobackkz':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="“ö–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑! –°—ñ–∑–≥–µ “õ–∞–Ω–¥–∞–π –∫”©–º–µ–∫ –∫”©—Ä—Å–µ—Ç–µ –∞–ª–∞–º—ã–Ω?", reply_markup = startMarkupkz)
        elif call.data == 'lang':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑:/–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:',reply_markup = languageMarkup)

bot.remove_webhook()

time.sleep(0.1)

# Set webhook
bot.set_webhook(url=WEBHOOK_URL_BASE + WEBHOOK_URL_PATH,
                certificate=open(WEBHOOK_SSL_CERT, 'r'))

# Start flask server
app.run(host=WEBHOOK_LISTEN, port=WEBHOOK_PORT, ssl_context=(WEBHOOK_SSL_CERT, WEBHOOK_SSL_PRIV), debug = True)
